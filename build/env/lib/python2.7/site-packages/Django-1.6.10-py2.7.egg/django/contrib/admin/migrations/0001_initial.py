# -*- coding: utf-8 -*-
from south.utils import datetime_utils as datetime
from south.db import db
from south.v2 import SchemaMigration
from django.db import models


class Migration(SchemaMigration):

    def forwards(self, orm):
        # Adding model 'LogEntry'
        db.create_table(u'django_admin_log', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('action_time', self.gf('django.db.models.fields.DateTimeField')(auto_now=True, blank=True)),
            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('content_type', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['contenttypes.ContentType'], null=True, blank=True)),
            ('object_id', self.gf('django.db.models.fields.TextField')(null=True, blank=True)),
            ('object_repr', self.gf('django.db.models.fields.CharField')(max_length=200)),
            ('action_flag', self.gf('django.db.models.fields.PositiveSmallIntegerField')()),
            ('change_message', self.gf('django.db.models.fields.TextField')(blank=True)),
        ))
        db.send_create_signal(u'admin', ['LogEntry'])

        # Adding model 'UserProfile'
        db.create_table(u'admin_userprofile', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('user', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'], unique=True)),
            ('home_directory', self.gf('django.db.models.fields.CharField')(max_length=1024, null=True)),
            ('is_usermanager', self.gf('django.db.models.fields.BooleanField')(default=False)),
            ('is_rightmanager', self.gf('django.db.models.fields.BooleanField')(default=False)),
        ))
        db.send_create_signal(u'admin', ['UserProfile'])

        # Adding model 'Project'
        db.create_table(u'admin_project', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(unique=True, max_length=80)),
            ('project_directory', self.gf('django.db.models.fields.CharField')(max_length=255, unique=True, null=True)),
            ('created_time', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
            ('manager', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('slug', self.gf('django.db.models.fields.CharField')(unique=True, max_length=60)),
        ))
        db.send_create_signal(u'admin', ['Project'])

        # Adding model 'Role'
        db.create_table(u'admin_role', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('name', self.gf('django.db.models.fields.CharField')(unique=True, max_length=80)),
            ('create_time', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
            ('role_directory', self.gf('django.db.models.fields.CharField')(max_length=1024, null=True, blank=True)),
            ('slug', self.gf('django.db.models.fields.CharField')(unique=True, max_length=60)),
        ))
        db.send_create_signal(u'admin', ['Role'])

        # Adding model 'GroupProfile'
        db.create_table(u'admin_groupprofile', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('group', self.gf('django.db.models.fields.related.OneToOneField')(to=orm['auth.Group'], unique=True)),
            ('role', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['admin.Role'], null=True, blank=True)),
            ('project', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['admin.Project'], null=True, blank=True)),
        ))
        db.send_create_signal(u'admin', ['GroupProfile'])

        # Adding model 'TableInfo'
        db.create_table(u'admin_tableinfo', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('table', self.gf('django.db.models.fields.CharField')(unique=True, max_length=255)),
            ('creator', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('group', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.Group'])),
        ))
        db.send_create_signal(u'admin', ['TableInfo'])

        # Adding index on 'TableInfo', fields ['table']
        db.create_index(u'admin_tableinfo', ['table'])

        # Adding model 'BimHbasePermission'
        db.create_table(u'admin_bimhbasepermission', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('table', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['admin.TableInfo'])),
            ('action', self.gf('django.db.models.fields.CharField')(max_length=255)),
            ('description', self.gf('django.db.models.fields.CharField')(max_length=255, blank=True)),
            ('creator', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('create_time', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
        ))
        db.send_create_signal(u'admin', ['BimHbasePermission'])

        # Adding unique constraint on 'BimHbasePermission', fields ['table', 'action']
        db.create_unique(u'admin_bimhbasepermission', ['table_id', 'action'])

        # Adding index on 'BimHbasePermission', fields ['table', 'action']
        db.create_index(u'admin_bimhbasepermission', ['table_id', 'action'])

        # Adding M2M table for field groups on 'BimHbasePermission'
        m2m_table_name = db.shorten_name(u'admin_bimhbasepermission_groups')
        db.create_table(m2m_table_name, (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('bimhbasepermission', models.ForeignKey(orm[u'admin.bimhbasepermission'], null=False)),
            ('group', models.ForeignKey(orm[u'auth.group'], null=False))
        ))
        db.create_unique(m2m_table_name, ['bimhbasepermission_id', 'group_id'])

        # Adding model 'FileInfo'
        db.create_table(u'admin_fileinfo', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('path', self.gf('django.db.models.fields.CharField')(unique=True, max_length=255)),
            ('owner', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('group', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.Group'])),
        ))
        db.send_create_signal(u'admin', ['FileInfo'])

        # Adding index on 'FileInfo', fields ['path']
        db.create_index(u'admin_fileinfo', ['path'])

        # Adding model 'BimFilePermission'
        db.create_table(u'admin_bimfilepermission', (
            (u'id', self.gf('django.db.models.fields.AutoField')(primary_key=True)),
            ('file', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['admin.FileInfo'])),
            ('action', self.gf('django.db.models.fields.CharField')(max_length=100)),
            ('description', self.gf('django.db.models.fields.CharField')(max_length=255, blank=True)),
            ('creator', self.gf('django.db.models.fields.related.ForeignKey')(to=orm['auth.User'])),
            ('create_time', self.gf('django.db.models.fields.DateTimeField')(default=datetime.datetime.now)),
        ))
        db.send_create_signal(u'admin', ['BimFilePermission'])

        # Adding unique constraint on 'BimFilePermission', fields ['file', 'action']
        db.create_unique(u'admin_bimfilepermission', ['file_id', 'action'])

        # Adding index on 'BimFilePermission', fields ['file', 'action']
        db.create_index(u'admin_bimfilepermission', ['file_id', 'action'])

        # Adding M2M table for field groups on 'BimFilePermission'
        m2m_table_name = db.shorten_name(u'admin_bimfilepermission_groups')
        db.create_table(m2m_table_name, (
            ('id', models.AutoField(verbose_name='ID', primary_key=True, auto_created=True)),
            ('bimfilepermission', models.ForeignKey(orm[u'admin.bimfilepermission'], null=False)),
            ('group', models.ForeignKey(orm[u'auth.group'], null=False))
        ))
        db.create_unique(m2m_table_name, ['bimfilepermission_id', 'group_id'])


    def backwards(self, orm):
        # Removing index on 'BimFilePermission', fields ['file', 'action']
        db.delete_index(u'admin_bimfilepermission', ['file_id', 'action'])

        # Removing unique constraint on 'BimFilePermission', fields ['file', 'action']
        db.delete_unique(u'admin_bimfilepermission', ['file_id', 'action'])

        # Removing index on 'FileInfo', fields ['path']
        db.delete_index(u'admin_fileinfo', ['path'])

        # Removing index on 'BimHbasePermission', fields ['table', 'action']
        db.delete_index(u'admin_bimhbasepermission', ['table_id', 'action'])

        # Removing unique constraint on 'BimHbasePermission', fields ['table', 'action']
        db.delete_unique(u'admin_bimhbasepermission', ['table_id', 'action'])

        # Removing index on 'TableInfo', fields ['table']
        db.delete_index(u'admin_tableinfo', ['table'])

        # Deleting model 'LogEntry'
        db.delete_table(u'django_admin_log')

        # Deleting model 'UserProfile'
        db.delete_table(u'admin_userprofile')

        # Deleting model 'Project'
        db.delete_table(u'admin_project')

        # Deleting model 'Role'
        db.delete_table(u'admin_role')

        # Deleting model 'GroupProfile'
        db.delete_table(u'admin_groupprofile')

        # Deleting model 'TableInfo'
        db.delete_table(u'admin_tableinfo')

        # Deleting model 'BimHbasePermission'
        db.delete_table(u'admin_bimhbasepermission')

        # Removing M2M table for field groups on 'BimHbasePermission'
        db.delete_table(db.shorten_name(u'admin_bimhbasepermission_groups'))

        # Deleting model 'FileInfo'
        db.delete_table(u'admin_fileinfo')

        # Deleting model 'BimFilePermission'
        db.delete_table(u'admin_bimfilepermission')

        # Removing M2M table for field groups on 'BimFilePermission'
        db.delete_table(db.shorten_name(u'admin_bimfilepermission_groups'))


    models = {
        u'admin.bimfilepermission': {
            'Meta': {'unique_together': "(('file', 'action'),)", 'object_name': 'BimFilePermission', 'index_together': "[['file', 'action']]"},
            'action': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'create_time': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'creator': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"}),
            'description': ('django.db.models.fields.CharField', [], {'max_length': '255', 'blank': 'True'}),
            'file': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['admin.FileInfo']"}),
            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Group']", 'symmetrical': 'False'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'})
        },
        u'admin.bimhbasepermission': {
            'Meta': {'unique_together': "(('table', 'action'),)", 'object_name': 'BimHbasePermission', 'index_together': "[['table', 'action']]"},
            'action': ('django.db.models.fields.CharField', [], {'max_length': '255'}),
            'create_time': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'creator': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"}),
            'description': ('django.db.models.fields.CharField', [], {'max_length': '255', 'blank': 'True'}),
            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Group']", 'symmetrical': 'False'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'table': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['admin.TableInfo']"})
        },
        u'admin.fileinfo': {
            'Meta': {'object_name': 'FileInfo', 'index_together': "[['path']]"},
            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.Group']"}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'owner': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"}),
            'path': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '255'})
        },
        u'admin.groupprofile': {
            'Meta': {'object_name': 'GroupProfile'},
            'group': ('django.db.models.fields.related.OneToOneField', [], {'to': u"orm['auth.Group']", 'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['admin.Project']", 'null': 'True', 'blank': 'True'}),
            'role': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['admin.Role']", 'null': 'True', 'blank': 'True'})
        },
        u'admin.logentry': {
            'Meta': {'ordering': "(u'-action_time',)", 'object_name': 'LogEntry', 'db_table': "u'django_admin_log'"},
            'action_flag': ('django.db.models.fields.PositiveSmallIntegerField', [], {}),
            'action_time': ('django.db.models.fields.DateTimeField', [], {'auto_now': 'True', 'blank': 'True'}),
            'change_message': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['contenttypes.ContentType']", 'null': 'True', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'object_id': ('django.db.models.fields.TextField', [], {'null': 'True', 'blank': 'True'}),
            'object_repr': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"})
        },
        u'admin.project': {
            'Meta': {'object_name': 'Project'},
            'created_time': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'manager': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
            'project_directory': ('django.db.models.fields.CharField', [], {'max_length': '255', 'unique': 'True', 'null': 'True'}),
            'slug': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '60'})
        },
        u'admin.role': {
            'Meta': {'object_name': 'Role'},
            'create_time': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
            'role_directory': ('django.db.models.fields.CharField', [], {'max_length': '1024', 'null': 'True', 'blank': 'True'}),
            'slug': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '60'})
        },
        u'admin.tableinfo': {
            'Meta': {'object_name': 'TableInfo', 'index_together': "[['table']]"},
            'creator': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']"}),
            'group': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.Group']"}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'table': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '255'})
        },
        u'admin.userprofile': {
            'Meta': {'object_name': 'UserProfile'},
            'home_directory': ('django.db.models.fields.CharField', [], {'max_length': '1024', 'null': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'is_rightmanager': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'is_usermanager': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['auth.User']", 'unique': 'True'})
        },
        u'auth.group': {
            'Meta': {'object_name': 'Group'},
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': u"orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
        },
        u'auth.permission': {
            'Meta': {'ordering': "(u'content_type__app_label', u'content_type__model', u'codename')", 'unique_together': "((u'content_type', u'codename'),)", 'object_name': 'Permission'},
            'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['contenttypes.ContentType']"}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
        },
        u'auth.user': {
            'Meta': {'object_name': 'User'},
            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'symmetrical': 'False', 'related_name': "u'user_set'", 'blank': 'True', 'to': u"orm['auth.Group']"}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'symmetrical': 'False', 'related_name': "u'user_set'", 'blank': 'True', 'to': u"orm['auth.Permission']"}),
            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
        },
        u'contenttypes.contenttype': {
            'Meta': {'ordering': "('name',)", 'unique_together': "(('app_label', 'model'),)", 'object_name': 'ContentType', 'db_table': "'django_content_type'"},
            'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
        }
    }

    complete_apps = ['admin']